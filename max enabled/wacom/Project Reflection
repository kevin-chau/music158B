Project Reflection
Name: Kevin
The original goal of the wacom.grid patch was to divide the input space into an organized MIDI system that allows new users to interact with the instrument as easily as they would any other midi instrument. The main advantage in an organized note grid is that the user does not have to learn any new "gestures" to start playing the instrument. Activating the voices of the synthsizer is as simple as touching a finger to the pad. This leaves the user/instrumentalist free to explore the diatonic harmonies and how they are arranged around the input space. The wacom grid's practicality in this sense makes the wacom a good instrument in live performance settings where other mostly tonal and harmonic instruments are playing. It would also be very useful along other midi instruments in a music production setting -- after all, the wacom grid is modeled after other midi grid instrument. What the wacom grid has over other grid instruments is that the input space is continuous, so the player can glide between notes. A transparent overlay or some type of tactile overlay which allows users to see and feel the seperations between notes could make the wacom grid just as useful as other grid controllers with discrete buttons or even capacitive touch screen based grid controllers.
I would say the most difficult aspect of this project was tackling polyphony. The wacom grid and display algorithms in their first iteration were relatively simple to implement for a monophonic synthesizer. Simply put, the single voice synth was a dull and the interaction was uninteresting and limited. We could essentially only drag a single fingle around the grid. Playing three successive notes on seperate fingers quickly (like on a piano) was something that in theory should be support by the monophonic wacom grid, but never really worked. Because sloppy finger rolls often mean multiple fingers can be in contact with the surface at once, it seemed more likely that an articulation such as this would be better suited for a polyphonic synth. Ultimately it was this increase in articulation, rather than simply the ability to make chords, which was the main reason why we spent so much energy on working out the odot code for multiple fingers. After we got basic polyphony working, I focused more on optimizing our code and the sound design for the synthesizer. I decided to go with the additive synthesizer to enhance the harmonic content of our instrument.
